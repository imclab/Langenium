{"ts":1363623153072,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function bulletEffect(position){\n\t\tvar particleCount = 20,\n\t\t\t\tparticles = new THREE.Geometry(),\n\t\t\t\tpMaterial =\n\t\t\t\t  new THREE.ParticleBasicMaterial({\n\t\t\t\t\tmap: THREE.ImageUtils.loadTexture(\"assets/particle.png?nocache\"),\n\t\t\t\t\tsize: .25,\n\t\t\t\t\tblending: THREE.AdditiveBlending,\n\t\t\t\t\ttransparent: true\n\t\t\t\t  });\n\n\t\t\t// now create the individual particles\n\t\t\tfor(var p = 0; p < particleCount; p++) {\n\t\t\t\t// create a particle with random\n\t\t\t\t// position values, -250 -> 250\n\t\t\t\tvar pX = position.x + Math.random() * 4 - 2,\n\t\t\t\t  pY = position.y + Math.random() * 4 - 2,\n\t\t\t\t  pZ = position.z + Math.random() * 4 - 2,\n\t\t\t\t  particle = new THREE.Vector3(pX, pY, pZ);\n\t\t\t\t// add it to the geometry\n\t\t\t\tparticles.vertices.push(particle);\n\t\t\t}\n\n\t\t\t// create the particle system\n\t\t\tvar particle_system = new THREE.ParticleSystem(particles, pMaterial);\t\n\t\t\tparticle_system.max = 6;\n\t\t\tparticle_system.min = 1;\n\t\t\tparticle_system._lifetime = 0;\n\t\t\tparticle_system.sortParticles = true;\n\t\t\tparticle_systems.push(particle_system);\n\t\t\t// add it to the scene\n\t\t\tscene.add(particle_systems[particle_systems.length-1]);\n}\n\nfunction handleBullets(delta){\n\tbullets.forEach(function(bullet, index){\n\t\tbullets[index].translateZ(-SPEED);\n\t\tbullets[index]._lifetime += delta;\n\t\t\n\t\tif (bullets[index]._lifetime > MAX_LIFETIME) {\n\t\t\tscene.remove(bullets[index]);\n\t\t\tbullets.splice(index, 1);\n\t\t}\n\t\telse {\n\t\t\tbots.forEach(function(bot) {\n\t\t\t\tif ((bullet.username != bot.id)&&(bot.position.distanceTo(bullet.position) < 50)) {\n\t\t\t\t\tscene.remove(bullet);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n \nfunction addBullet(ship) {\n\n\tvar geometry = new THREE.CubeGeometry(1, 1, 30);\n\tfor ( var i = 0; i < geometry.faces.length; i ++ ) {\n\t\t\n\t\tgeometry.faces[ i ].color.setHex( 0xFF6600 );\n\t}\n\t\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors } );\n\tvar pVector = new THREE.Vector3(ship.position.x, ship.position.y, ship.position.z);\n\t\n\tvar \tlBullet = makeBullet(ship.position, pVector, ship.rotation.y, 20, geometry, material),\n\t\t\trBullet = makeBullet(ship.position, pVector, ship.rotation.y, -20, geometry, material);\n\t\t\t\n\tlBullet.username = ship.username || ship.id;\t\t\t\n\trBullet.username = ship.username || ship.id;\n\t\n\tbullets.push(lBullet);\n\tscene.add(bullets[bullets.length-1]);\n\tbullets.push(rBullet);\n\tscene.add(bullets[bullets.length-1]);\n\n}\n\n\n\nvar\tcounter = 0,\n\t\tSPEED = 30, \n\t\tINTERVAL = .1, \n\t\tMAX_LIFETIME = 1;\n\t\t\nfunction makeBullet(position, pVector, rotation, shifter,geometry, material) {\n\tvar bullet = new THREE.Mesh(geometry, material);\n\t\n\tbullet.opacity = .8;\n\tbullet.position.x = position.x;\n\tbullet.position.y = position.y + 10;\n\tbullet.position.z = position.z;\n\tbullet.rotation.z = Math.PI / 4;\n\tbullet.rotation.y = rotation;\n\n\tvar xRot = position.x + Math.sin(rotation) * shifter + Math.cos(rotation) * shifter;\n\tvar zRot = position.z + Math.cos(rotation) * shifter - Math.sin(rotation) * shifter;\n\t\n\tbullet.position.x = xRot;\n\tbullet.position.z = zRot;\n\t\n\tbullet._lifetime = 0;\n\tbullet.updateMatrix();\n\treturn bullet;\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":3020}]],"length":3020}
